<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node on @adnanrahic</title>
    <link>https://adnanrahic.com/tags/node/</link>
    <description>Recent content in Node on @adnanrahic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Have questions? Shoot me an email, or hit me up on social media! This site was coded with &lt;3 by yours truly.</copyright>
    <lastBuildDate>Thu, 15 Nov 2018 00:03:26 +0200</lastBuildDate>
    
	<atom:link href="https://adnanrahic.com/tags/node/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A crash course on optimizing your Docker images for production</title>
      <link>https://adnanrahic.com/post/a-crash-course-on-optimizing-your-docker-images-for-production/</link>
      <pubDate>Thu, 15 Nov 2018 00:03:26 +0200</pubDate>
      
      <guid>https://adnanrahic.com/post/a-crash-course-on-optimizing-your-docker-images-for-production/</guid>
      <description>Don’t you hate it when deploying your app takes ages? Over a gigabyte for a single container image isn’t really what is viewed as best practice. Pushing billions of bytes around every time you deploy a new version doesn’t sound quite right for me.
TL;DR This article will show you a few simple steps of how you can optimize your Docker images, making them smaller, faster and better suited for production.</description>
    </item>
    
    <item>
      <title>Serverless with AWS - Image resize on-the-fly with Lambda and S3</title>
      <link>https://adnanrahic.com/post/a-crash-course-on-serverless-with-aws-image-resize-on-the-fly-with-lambda-and-s3/</link>
      <pubDate>Thu, 27 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://adnanrahic.com/post/a-crash-course-on-serverless-with-aws-image-resize-on-the-fly-with-lambda-and-s3/</guid>
      <description>Handling large images has always been a pain in my side since I started writing code. Lately, it has started to have a huge impact on page speed and SEO ranking. If your website has poorly optimized images it won&amp;rsquo;t score well on Google Lighthouse. If it doesn&amp;rsquo;t score well, it won&amp;rsquo;t be on the first page of Google. That sucks.
TL;DR I&amp;rsquo;ve built and open-sourced a snippet of code that automates the process of creating and deploying an image resize function and an S3 bucket with one simple command.</description>
    </item>
    
    <item>
      <title>Containers vs. Serverless from a DevOps standpoint</title>
      <link>https://adnanrahic.com/post/containers-vs-serverless-from-a-devops-standpoint/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://adnanrahic.com/post/containers-vs-serverless-from-a-devops-standpoint/</guid>
      <description>Two buzzwords walk into a bar&amp;hellip; No? Yeah, let&amp;rsquo;s not go there. If you feel like this, you&amp;rsquo;re in the right place. Both containers and serverless have been the cool new kid on the block for the last few years, and the popularity simply isn&amp;rsquo;t dying down.
Before I continue, let me clarify. No, you will not lose your DevOps job because of serverless. There, I said it. Can we continue now?</description>
    </item>
    
    <item>
      <title>Serverless with AWS - Triggering Lambda with SNS Messaging</title>
      <link>https://adnanrahic.com/post/a-crash-course-on-serverless-with-aws-triggering-lambda-with-sns-messaging/</link>
      <pubDate>Thu, 30 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://adnanrahic.com/post/a-crash-course-on-serverless-with-aws-triggering-lambda-with-sns-messaging/</guid>
      <description>If you&amp;rsquo;re like me, a sucker for event-driven programming, you&amp;rsquo;ll want to continue reading. Today we&amp;rsquo;ll take a look at triggering AWS Lambda functions from AWS SNS messages. I&amp;rsquo;ve covered a few interesting topics regarding serverless architectures and AWS already, but nothing like this yet. Dig down, and get ready. Let&amp;rsquo;s go.
TL;DR  What are we building? What is AWS SNS? Build the API with the Serverless Framework Deploy the API to AWS Lambda Test the API with Dashbird  Note: All the code from this tutorial is already on GitHub if you want to check out the end result right away.</description>
    </item>
    
    <item>
      <title>Serverless-side rendering with Vue.js, Nuxt.js and AWS Lambda</title>
      <link>https://adnanrahic.com/post/a-crash-course-on-serverless-side-rendering-with-vuejs-nuxtjs-and-aws-lambda/</link>
      <pubDate>Tue, 21 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://adnanrahic.com/post/a-crash-course-on-serverless-side-rendering-with-vuejs-nuxtjs-and-aws-lambda/</guid>
      <description>That&amp;rsquo;s a mouthful of a title right there. Don&amp;rsquo;t let it scare you away. What it boils down to is rather simple.
We want the best of both worlds. The SEO boost server-side rendering provides, and the speed of a Single Page Application. All this while hosted basically for free in a serverless environment on AWS Lambda.
TL;DR Here&amp;rsquo;s a quick overview of what we&amp;rsquo;ll be building for you to get up to speed.</description>
    </item>
    
    <item>
      <title>Building a serverless contact form with AWS Lambda and AWS SES</title>
      <link>https://adnanrahic.com/post/building-a-serverless-contact-form-with-aws-lambda-and-aws-ses/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://adnanrahic.com/post/building-a-serverless-contact-form-with-aws-lambda-and-aws-ses/</guid>
      <description>What if I told you it can be done with zero dependencies? Hope you&amp;rsquo;re up for a challenge because that&amp;rsquo;s exactly what we&amp;rsquo;ll be doing.
This tutorial will cover the basics of both the front-end contact form, with vanilla JavaScript, and the serverless back end hosted on AWS Lambda. AWS SES is the service you use for sending the actual emails and trust me, it&amp;rsquo;s so incredibly simple the configuration takes 13 seconds.</description>
    </item>
    
    <item>
      <title>A crash course on Serverless APIs with Express and MongoDB</title>
      <link>https://adnanrahic.com/post/a-crash-course-on-serverless-apis-with-express-and-mongodb/</link>
      <pubDate>Mon, 02 Jul 2018 20:03:26 +0200</pubDate>
      
      <guid>https://adnanrahic.com/post/a-crash-course-on-serverless-apis-with-express-and-mongodb/</guid>
      <description>Serverless has become an amazing tool for various use cases. Data processors, chatbots, APIs, you name it is now developed using serverless architectures.
Today, I&amp;rsquo;ll walk you through creating a production-ready Express API running on AWS Lambda with a persistent MongoDB data store. Yes, that&amp;rsquo;s a thing, you can build Express apps on AWS Lambda. Amazing, I know! And yes, you can use MongoDB without batting an eye!
It&amp;rsquo;s pretty straightforward when you think about it.</description>
    </item>
    
    <item>
      <title>How to deploy a Node.js application to AWS Lambda using Serverless</title>
      <link>https://adnanrahic.com/post/how-to-deploy-a-nodejs-application-to-aws-lambda-using-serverless/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://adnanrahic.com/post/how-to-deploy-a-nodejs-application-to-aws-lambda-using-serverless/</guid>
      <description>Being a developer is amazing. Writing code, solving problems and thinking of ingenious solutions for complicated algorithms is what we live for. But, the grass is not always so green on this side of the fence. Sooner or later you need to get your hands dirty and deploy the app you worked so hard on. Deployments are not always easy. To be blunt, they can be incredibly hard and time-consuming.</description>
    </item>
    
  </channel>
</rss>