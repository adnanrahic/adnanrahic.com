<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Showdev on @adnanrahic</title>
    <link>https://adnanrahic.com/tags/showdev/</link>
    <description>Recent content in Showdev on @adnanrahic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Have questions? Shoot me an email, or hit me up on social media! This site was coded with &lt;3 by yours truly.</copyright>
    <lastBuildDate>Thu, 15 Nov 2018 00:03:26 +0200</lastBuildDate>
    
	<atom:link href="https://adnanrahic.com/tags/showdev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A crash course on optimizing your Docker images for production</title>
      <link>https://adnanrahic.com/post/a-crash-course-on-optimizing-your-docker-images-for-production/</link>
      <pubDate>Thu, 15 Nov 2018 00:03:26 +0200</pubDate>
      
      <guid>https://adnanrahic.com/post/a-crash-course-on-optimizing-your-docker-images-for-production/</guid>
      <description>Don’t you hate it when deploying your app takes ages? Over a gigabyte for a single container image isn’t really what is viewed as best practice. Pushing billions of bytes around every time you deploy a new version doesn’t sound quite right for me.
TL;DR This article will show you a few simple steps of how you can optimize your Docker images, making them smaller, faster and better suited for production.</description>
    </item>
    
    <item>
      <title>Building a serverless contact form with AWS Lambda and AWS SES</title>
      <link>https://adnanrahic.com/post/building-a-serverless-contact-form-with-aws-lambda-and-aws-ses/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://adnanrahic.com/post/building-a-serverless-contact-form-with-aws-lambda-and-aws-ses/</guid>
      <description>What if I told you it can be done with zero dependencies? Hope you&amp;rsquo;re up for a challenge because that&amp;rsquo;s exactly what we&amp;rsquo;ll be doing.
This tutorial will cover the basics of both the front-end contact form, with vanilla JavaScript, and the serverless back end hosted on AWS Lambda. AWS SES is the service you use for sending the actual emails and trust me, it&amp;rsquo;s so incredibly simple the configuration takes 13 seconds.</description>
    </item>
    
    <item>
      <title>A crash course on Serverless APIs with Express and MongoDB</title>
      <link>https://adnanrahic.com/post/a-crash-course-on-serverless-apis-with-express-and-mongodb/</link>
      <pubDate>Mon, 02 Jul 2018 20:03:26 +0200</pubDate>
      
      <guid>https://adnanrahic.com/post/a-crash-course-on-serverless-apis-with-express-and-mongodb/</guid>
      <description>Serverless has become an amazing tool for various use cases. Data processors, chatbots, APIs, you name it is now developed using serverless architectures.
Today, I&amp;rsquo;ll walk you through creating a production-ready Express API running on AWS Lambda with a persistent MongoDB data store. Yes, that&amp;rsquo;s a thing, you can build Express apps on AWS Lambda. Amazing, I know! And yes, you can use MongoDB without batting an eye!
It&amp;rsquo;s pretty straightforward when you think about it.</description>
    </item>
    
  </channel>
</rss>